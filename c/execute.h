#pragma once

#include <stdint.h>

#include "frame.h"

void op_aaload(struct vm * vm);
void op_aastore(struct vm * vm);
void op_aconst_null(struct vm * vm);
void op_aload(struct vm * vm, uint32_t index);
void op_aload_0(struct vm * vm);
void op_aload_1(struct vm * vm);
void op_aload_2(struct vm * vm);
void op_aload_3(struct vm * vm);
void op_anewarray(struct vm * vm, uint32_t index);
void op_areturn(struct vm * vm);
void op_arraylength(struct vm * vm);
void op_astore(struct vm * vm, uint32_t index);
void op_astore_0(struct vm * vm);
void op_astore_1(struct vm * vm);
void op_astore_2(struct vm * vm);
void op_astore_3(struct vm * vm);
void op_athrow(struct vm * vm);
void op_baload(struct vm * vm);
void op_bastore(struct vm * vm);
void op_bipush(struct vm * vm, int32_t byte);
void op_breakpoint(struct vm * vm);
void op_caload(struct vm * vm);
void op_castore(struct vm * vm);
void op_checkcast(struct vm * vm, uint32_t index);
void op_d2f(struct vm * vm);
void op_d2i(struct vm * vm);
void op_d2l(struct vm * vm);
void op_dadd(struct vm * vm);
void op_daload(struct vm * vm);
void op_dastore(struct vm * vm);
void op_dcmpg(struct vm * vm);
void op_dcmpl(struct vm * vm);
void op_dconst_0(struct vm * vm);
void op_dconst_1(struct vm * vm);
void op_ddiv(struct vm * vm);
void op_dload(struct vm * vm, uint32_t index);
void op_dload_0(struct vm * vm);
void op_dload_1(struct vm * vm);
void op_dload_2(struct vm * vm);
void op_dload_3(struct vm * vm);
void op_dmul(struct vm * vm);
void op_dneg(struct vm * vm);
void op_drem(struct vm * vm);
void op_dreturn(struct vm * vm);
void op_dstore(struct vm * vm, uint32_t index);
void op_dstore_0(struct vm * vm);
void op_dstore_1(struct vm * vm);
void op_dstore_2(struct vm * vm);
void op_dstore_3(struct vm * vm);
void op_dsub(struct vm * vm);
void op_dup(struct vm * vm);
void op_dup2(struct vm * vm);
void op_dup2_x1(struct vm * vm);
void op_dup2_x2(struct vm * vm);
void op_dup_x1(struct vm * vm);
void op_dup_x2(struct vm * vm);
void op_f2d(struct vm * vm);
void op_f2i(struct vm * vm);
void op_f2l(struct vm * vm);
void op_fadd(struct vm * vm);
void op_faload(struct vm * vm);
void op_fastore(struct vm * vm);
void op_fcmpg(struct vm * vm);
void op_fcmpl(struct vm * vm);
void op_fconst_0(struct vm * vm);
void op_fconst_1(struct vm * vm);
void op_fconst_2(struct vm * vm);
void op_fdiv(struct vm * vm);
void op_fload(struct vm * vm, uint32_t index);
void op_fload_0(struct vm * vm);
void op_fload_1(struct vm * vm);
void op_fload_2(struct vm * vm);
void op_fload_3(struct vm * vm);
void op_fmul(struct vm * vm);
void op_fneg(struct vm * vm);
void op_frem(struct vm * vm);
void op_freturn(struct vm * vm);
void op_fstore(struct vm * vm, uint32_t index);
void op_fstore_0(struct vm * vm);
void op_fstore_1(struct vm * vm);
void op_fstore_2(struct vm * vm);
void op_fstore_3(struct vm * vm);
void op_fsub(struct vm * vm);
void op_getfield(struct vm * vm, uint32_t index);
void op_getstatic(struct vm * vm, uint32_t index);
void op_goto(struct vm * vm, int32_t branch);
void op_goto_w(struct vm * vm, int32_t branch);
void op_i2b(struct vm * vm);
void op_i2c(struct vm * vm);
void op_i2d(struct vm * vm);
void op_i2f(struct vm * vm);
void op_i2l(struct vm * vm);
void op_i2s(struct vm * vm);
void op_iadd(struct vm * vm);
void op_iaload(struct vm * vm);
void op_iand(struct vm * vm);
void op_iastore(struct vm * vm);
void op_iconst_0(struct vm * vm);
void op_iconst_1(struct vm * vm);
void op_iconst_2(struct vm * vm);
void op_iconst_3(struct vm * vm);
void op_iconst_4(struct vm * vm);
void op_iconst_5(struct vm * vm);
void op_iconst_m1(struct vm * vm);
void op_idiv(struct vm * vm);
void op_if_acmpeq(struct vm * vm, int32_t branch);
void op_if_acmpne(struct vm * vm, int32_t branch);
void op_if_icmpeq(struct vm * vm, int32_t branch);
void op_if_icmpge(struct vm * vm, int32_t branch);
void op_if_icmpgt(struct vm * vm, int32_t branch);
void op_if_icmple(struct vm * vm, int32_t branch);
void op_if_icmplt(struct vm * vm, int32_t branch);
void op_if_icmpne(struct vm * vm, int32_t branch);
void op_ifeq(struct vm * vm, int32_t branch);
void op_ifge(struct vm * vm, int32_t branch);
void op_ifgt(struct vm * vm, int32_t branch);
void op_ifle(struct vm * vm, int32_t branch);
void op_iflt(struct vm * vm, int32_t branch);
void op_ifne(struct vm * vm, int32_t branch);
void op_ifnonnull(struct vm * vm, int32_t branch);
void op_ifnull(struct vm * vm, int32_t branch);
void op_iinc(struct vm * vm, uint32_t index, uint32_t _const);
void op_iload(struct vm * vm, uint32_t index);
void op_iload_0(struct vm * vm);
void op_iload_1(struct vm * vm);
void op_iload_2(struct vm * vm);
void op_iload_3(struct vm * vm);
void op_impdep1(struct vm * vm);
void op_impdep2(struct vm * vm);
void op_imul(struct vm * vm);
void op_ineg(struct vm * vm);
void op_instanceof(struct vm * vm, uint32_t index);
void op_invokedynamic(struct vm * vm, uint32_t index);
void op_invokeinterface(struct vm * vm, uint32_t index, uint32_t count);
void op_invokespecial(struct vm * vm, uint32_t index);
void op_invokestatic(struct vm * vm, uint32_t index);
void op_invokevirtual(struct vm * vm, uint32_t index);
void op_ior(struct vm * vm);
void op_irem(struct vm * vm);
void op_ireturn(struct vm * vm);
void op_ishl(struct vm * vm);
void op_ishr(struct vm * vm);
void op_istore(struct vm * vm, uint32_t index);
void op_istore_0(struct vm * vm);
void op_istore_1(struct vm * vm);
void op_istore_2(struct vm * vm);
void op_istore_3(struct vm * vm);
void op_isub(struct vm * vm);
void op_iushr(struct vm * vm);
void op_ixor(struct vm * vm);
void op_jsr(struct vm * vm, int32_t branch);
void op_jsr_w(struct vm * vm, int32_t branch);
void op_l2d(struct vm * vm);
void op_l2f(struct vm * vm);
void op_l2i(struct vm * vm);
void op_ladd(struct vm * vm);
void op_laload(struct vm * vm);
void op_land(struct vm * vm);
void op_lastore(struct vm * vm);
void op_lcmp(struct vm * vm);
void op_lconst_0(struct vm * vm);
void op_lconst_1(struct vm * vm);
void op_ldc(struct vm * vm, uint32_t index);
void op_ldc2_w(struct vm * vm, uint32_t index);
void op_ldc_w(struct vm * vm, uint32_t index);
void op_ldiv(struct vm * vm);
void op_lload(struct vm * vm, uint32_t index);
void op_lload_0(struct vm * vm);
void op_lload_1(struct vm * vm);
void op_lload_2(struct vm * vm);
void op_lload_3(struct vm * vm);
void op_lmul(struct vm * vm);
void op_lneg(struct vm * vm);
void op_lookupswitch(struct vm * vm);
void op_lor(struct vm * vm);
void op_lrem(struct vm * vm);
void op_lreturn(struct vm * vm);
void op_lshl(struct vm * vm);
void op_lshr(struct vm * vm);
void op_lstore(struct vm * vm, uint32_t index);
void op_lstore_0(struct vm * vm);
void op_lstore_1(struct vm * vm);
void op_lstore_2(struct vm * vm);
void op_lstore_3(struct vm * vm);
void op_lsub(struct vm * vm);
void op_lushr(struct vm * vm);
void op_lxor(struct vm * vm);
void op_monitorenter(struct vm * vm);
void op_monitorexit(struct vm * vm);
void op_multianewarray(struct vm * vm, uint32_t index, uint32_t dimensions);
void op_new(struct vm * vm, uint32_t index);
void op_newarray(struct vm * vm, uint32_t atype);
void op_nop(struct vm * vm);
void op_pop(struct vm * vm);
void op_pop2(struct vm * vm);
void op_putfield(struct vm * vm, uint32_t index);
void op_putstatic(struct vm * vm, uint32_t index);
void op_ret(struct vm * vm, uint32_t index);
void op_return(struct vm * vm);
void op_saload(struct vm * vm);
void op_sastore(struct vm * vm);
void op_sipush(struct vm * vm, int32_t byte);
void op_swap(struct vm * vm);
void op_tableswitch(struct vm * vm, int32_t defaultbyte, int32_t lowbyte, int32_t highbyte, const int32_t * table);
void op_wide(struct vm * vm);
